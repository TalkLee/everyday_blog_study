###正则表达式

创建正则表达式:

1. var reg1 = /pattern/flag;
2. var reg2 = new RegExp("pattern","flag");

例：

        var reg = new RegExp('abc','gi');  
        var reg = /abc/gi;
        两者等价,即构造函数中无需添加pattern两边的/

构造函数生成正则的优点在于正则表达式动态变化的情况下可以传入变量

[向字符串中加入特殊字符,需要转义](http://www.w3school.com.cn/js/js_special_characters.asp)，即加入反斜杠 __\ __

元字符: ( [ \ ^ $ | ? * + ] ) . 

当在正则表达式中添加元字符时，需要进行转义
当在构造函数的模式参数中添加元字符时，需要进行双重转义
例：
    
        //?在正则中表示非字面含义，若要表示字面含义，需通过\进行转义
        var reg = /\?/;  
        var reg2 = new RegExp("\?"); // 对?进行转义，实际表示'?',转化为正则等价于 reg2 = /?/      
        //若要reg2表示含义和reg相同，需要对\做转义
        var reg3 = new RegExp("\\?");// \\表示后一个\被转义了，浏览器会看作字符串\?,等价于reg3 = /\?/ 



- (x): 捕获括号，用于获取匹配到的字符串，然后用于后续处理
- (?:x):非捕获括号，匹配到的子串无法通过结果数组的下标进行访问
- 正则表达式

#正则待复习

    
